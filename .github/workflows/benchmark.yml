name: C++ Example
on:
  push:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  EM_VERSION: 3.0.0
  EM_CACHE_FOLDER: "emsdk-cache"

permissions:
  contents: write
  deployments: write

jobs:
  benchmark:
    name: Run C++ benchmark example
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Benchmark library
        uses: actions/cache@v1
        with:
          path: examples/cpp/benchmark
          key: ${{ runner.os }}-googlebenchmark-v1.5.0
      - name: Setup cache
        id: cache-system-libraries
        uses: actions/cache@v2
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}
      - name: Setup emsdk
        uses: mymindstorm/setup-emsdk@v11
        with:
          # Make sure to set a version number!
          version: ${{env.EM_VERSION}}
          # This is the name of the cache folder.
          # The cache folder will be placed in the build directory,
          #  so make sure it doesn't conflict with anything!
          actions-cache-folder: "emsdk-cache"

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: emcmake cmake -B ${{github.workspace}}/build -DBENCHMARK_ENABLE_TESTING=OFF -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Run Benchmark
        run: ./run_test.sh wasm_perf.html --benchmark_format=json | tee benchmark_result.json
        working-directory: ${{github.workspace}}/build

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: C++ Benchmark
          tool: "googlecpp"
          output-file-path: ${{github.workspace}}/build/benchmark_result.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: "200%"
          comment-on-alert: true
          fail-on-alert: true
